apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backendScheduler.name }}
  labels:
    app: {{ .Values.backendScheduler.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.backendScheduler.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.backendScheduler.name }}
    spec:
      containers:
      - name: {{ .Values.backendScheduler.name }}
        image: {{ .Values.backendCommon.image }}:{{ .Chart.AppVersion }}
        command: 
        - sh
        - '-c'
        - >
          until wget http://$BACKEND_RABBIT_USER:$BACKEND_RABBIT_PASS@$BACKEND_RABBIT_HOST:15672/api/aliveness-test/%2F > /dev/null 2>&1; 
          do echo waiting for rabbit ...; sleep 10; done && 
          echo rabbit is ready &&
          until yarn typeorm query "SELECT 1" > /dev/null 2>&1; 
          do echo waiting for db ...; sleep 10; done && 
          echo db is ready &&        
          node dist/apps/backend/main.js
        env:
        - name: TYPEORM_CONNECTION
          value: mysql
        - name: TYPEORM_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backendCommon.envsSecretName }}
              key: BACKEND_MYSQL_HOST
        - name: TYPEORM_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backendCommon.envsSecretName }}
              key: BACKEND_MYSQL_USERNAME
        - name: TYPEORM_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backendCommon.envsSecretName }}
              key: BACKEND_MYSQL_PASSWORD        
        - name: BACKEND_IS_SCHEDULER
          value: 'TRUE'           
        envFrom:
        - secretRef:
            name: {{ .Values.backendCommon.envsSecretName }}    
        volumeMounts:
        - name: scheduler-secrets-volume
          mountPath: /usr/src/app/secrets
      volumes:
      - name: scheduler-secrets-volume
        secret:
          secretName: {{ .Values.backendCommon.secretFilesSecretName }}
          items:
          - key: contentBigquery
            path: bigquery-test.json
          - key: contentRemotePrivateKey
            path: first-project-remote-private-key.pem
          - key: contentRemotePublicKey
            path: first-project-remote-public-key.pem

